<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.web.mapper.WxKeywordReplyMapper">
    <!--定义变量-->
    <sql id="tableName">wx_keyword_reply</sql>
    <sql id="defaultState">0</sql>

    <!--定义返回映射-->
    <resultMap id="baseResultMap" type="com.platform.web.entity.WxKeywordReply">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="store_id" property="storeId" jdbcType="INTEGER"/>
        <result column="rule" property="rule" jdbcType="VARCHAR"/>
        <result column="keyword" property="keyword" jdbcType="VARCHAR"/>
        <result column="reply_type" property="replyType" jdbcType="INTEGER"/>
        <result column="teletexts" property="teletexts" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="create_on" property="createon" jdbcType="VARCHAR"/>
        <result column="update_on" property="updateon" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
    </resultMap>


    <!--定义sql-->
    <insert id="insertDynamic" parameterType="com.platform.web.entity.WxKeywordReply" useGeneratedKeys="true"
            keyProperty="id">
        insert into <include refid="tableName"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="storeId != null">
                store_id,
            </if>

            <if test="rule != null">
                rule,
            </if>
            <if test="keyword != null">
                keyword,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="createon != null">
                create_on,
            </if>
            <if test="updateon != null">
                update_on,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="teletexts != null">
                teletexts,
            </if>
            <if test="replyType != null">
                reply_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">

            <if test="storeId != null">
                #{storeId},
            </if>

            <if test="rule != null">
                #{rule},
            </if>
            <if test="keyword != null">
                #{keyword},
            </if>
            <if test="content != null">
                #{content},
            </if>
            <if test="updateon != null">
                #{updateon},
            </if>

            <if test="createon != null">
                #{createon},
            </if>

            <if test="state != null">
                #{state},
            </if>
            <if test="teletexts != null">
                #{teletexts},
            </if>
            <if test="replyType != null">
                #{replyType},
            </if>
        </trim>
    </insert>

    <update id="updateDynamic" parameterType="com.platform.web.entity.WxKeywordReply">
        update <include refid="tableName"/>
        <set>

            <if test="storeId != null">
                store_id = #{storeId},
            </if>

            <if test="rule != null">
                rule = #{rule},
            </if>
            <if test="keyword != null">
                keyword = #{keyword},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="updateon != null">
                update_on = #{updateon},
            </if>

            <if test="createon != null">
                create_on = #{createon},
            </if>

            <if test="state != null">
                state = #{state},
            </if>
            <if test="teletexts != null">
                teletexts = #{teletexts},
            </if>
            <if test="replyType != null">
                reply_type = #{replyType},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="deleteById" parameterType="java.util.Map">
        update <include refid="tableName"/>
        <set>
            state = #{state}
        </set>
        where state = <include refid="defaultState"/>
        and id = #{id}
    </update>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="baseResultMap">
        select * from <include refid="tableName"/>
        where state = <include refid="defaultState"/>
        and id = #{id}
    </select>

    <select id="selectByStoreId" parameterType="java.lang.Integer" resultMap="baseResultMap">
        select * from <include refid="tableName"/>
        where state = <include refid="defaultState"/>
        and store_id = #{storeId}
    </select>

    <select id="selectByKeyword" parameterType="java.util.Map" resultMap="baseResultMap">
        select * from <include refid="tableName"/> as k
        where state = <include refid="defaultState"/>
        and locate(#{word}, k.keyword) > 0
        and store_id = #{storeId}
        limit 0, 1
    </select>

</mapper>